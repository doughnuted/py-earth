# AppVeyor.com is a Continuous Integration service to build and run tests under
# Windows
environment:
  global:
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\build_tools\\appveyor\\run_with_env.cmd"

  matrix:
    - PYTHON: "C:\\Python38-x64"
      PYTHON_VERSION: "3.8.10"
      PYTHON_ARCH: "64"
      MINICONDA: "C:\\Miniconda38-x64"
    



install:
  # Miniconda is pre-installed in the worker build
  - "SET PATH=%MINICONDA%;%MINICONDA%\\Scripts;%PATH%"
  - "python -m pip install -U pip"
  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""
  - "pip --version"

  # Remove cygwin because it clashes with conda
  # see http://help.appveyor.com/discussions/problems/3712-git-remote-https-seems-to-be-broken
  - "rmdir C:\\cygwin /s /q"

  # Install the build and runtime dependencies of the project.
  - "conda install --quiet --yes six numpy pandas sympy \"scipy>=1.10\" cython nose pytest scikit-learn wheel conda-build"
  - "pip install sphinx-gallery"
  - "python setup.py bdist_wheel bdist_wininst"
  - "python setup.py build_ext --inplace --cythonize"
  
  - ps: "ls"

  # Install the generated wheel package to test it
  - "pip install --pre --no-index --find-links dist/ sklearn-contrib-py-earth"

# Not a .NET project, we build scikit-learn in the install step instead
build: false

test_script:
    # Change to a non-source folder to make sure we run the tests on the
    #   # installed library.
  - "mkdir empty_folder"
  - "cd empty_folder"

  - "pytest -s -v pyearth"

    # Move back to the project folder
  - "cd .."

artifacts:
  # Archive the generated wheel package in the ci.appveyor.com build report.
  - path: dist\*
